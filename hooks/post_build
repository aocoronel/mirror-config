#!/usr/bin/env bash

source "$(dirname "$(realpath "$0")")/rebos-api"

system_files_path="$HOME/.config/rebos/system_files"

function add-groups() {
  for cmd in "$@"; do
    sudo usermod -aG "$cmd" "$USER"
  done
}

function get_dotfiles() {
  if [[ ! -d "$HOME/dotfiles/" ]]; then
    git clone https://codeberg.org/aocoronel/dotfiles && {
      cd "$HOME/dotfiles/" || return 1
      stow -R .
      cd - || return 1
    }
  fi
}

function setup_shell() {
  if [[ "$SHELL" != "/usr/bin/fish" ]]; then
    if command -v fish &>/dev/null; then
      sudo chsh -s "/usr/bin/fish" "$USER"
    fi
  fi
}

function setup_groups() {
  if [[ -f "/etc/docker/daemon.json" ]]; then
    add-groups docker
  fi
  if command -v virtualbox &>/dev/null; then
    add-groups vboxusers
  fi
  if command -v gamemoderun &>/dev/null; then
    add-groups gamemode
  fi
  # if command -v syncthing &>/dev/null; then
  #   sudo systemctl enable "syncthing@$USER.service"
  # fi
  # if command -v virt-manager &>/dev/null; then
  #   add-groups libvirt kvm
  #   sudo systemctl enable libvirtd.service --now
  #   sudo virsh net-autostart default >/dev/null
  # fi
}

function main() {
  get_dotfiles
  setup_shell
  setup_groups
  if [[ -f "/usr/bin/helix" ]]; then
    command -v hx >/dev/null 2>&1 || sudo ln -s /usr/bin/helix /usr/local/bin/hx
  fi
  if ! grep 1 "$HOME/.cache/rebos-group" &>/dev/null; then
    add-groups networkmanager wheel input dialout video render video && echo 1 >"$HOME/.cache/rebos-group"
  fi
}

main
